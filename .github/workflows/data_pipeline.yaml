name: Data Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write  

jobs:
  run-mlops-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Required to push changes

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Data_Pipeline/requirements.txt

      - name: Write GCP Credentials from Secret
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" > /tmp/gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json" >> $GITHUB_ENV

      - name: Data Ingestion & DVC Hashing
        env:
          GCP_BUCKET: ${{ secrets.GCP_BUCKET }}
          SOURCE_BLOB: ${{ secrets.SOURCE_BLOB }}
        run: python Data_Pipeline/data_ingestion.py

      - name: Data Preprocessing
        run: python Data_Pipeline/data_preprocessing.py

      - name: Schema Validation
        run: python Data_Pipeline/schema_validator.py

      - name: Anomaly Detection
        run: python Data_Pipeline/anomalies.py

      - name: Bias Detection
        run: python Data_Pipeline/bias_detector.py
      
      - name: Run Unit Tests
        run: |
          pip install pytest
          pytest Data_Pipeline/unit_testing.py

      - name: ‚òÅÔ∏è Upload Final Processed Data to GCP
        env:
          GCP_BUCKET: ${{ secrets.GCP_BUCKET }}
          GCP_PROCESSED_BLOB: ${{ secrets.GCP_PROCESSED_BLOB }}
        run: python Data_Pipeline/final_upload.py

      - name: üì• Commit logs, reports, and processed data to GitHub
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -f Data_Pipeline/logs/
          git add -f Data_Pipeline/validation/
          git add -f Data_Pipeline/data/processed/
          git add -f Data_Pipeline/dvc/

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Auto-commit: Add logs, reports, and processed files from pipeline run"
            git push
          fi

      - name: Trigger Model Pipeline
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-model-pipeline
