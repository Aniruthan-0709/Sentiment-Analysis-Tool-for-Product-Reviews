name: Train, Track with MLflow, and Upload Sentiment Model

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1"  # Every Monday at midnight UTC

jobs:
  train-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install Dependencies
      run: pip install -r ML_OPS_Sentiment_Analyser/requirements.txt

    - name: Authenticate with Google Cloud (Hardcoded)
      run: |
        echo '{
          "type": "service_account",
          "project_id": "your-project-id",
          "private_key_id": "your-private-key-id",
          "private_key": "-----BEGIN PRIVATE KEY-----\\nYOUR\\nMULTILINE\\nPRIVATE\\nKEY\\n-----END PRIVATE KEY-----\\n",
          "client_email": "your-service-account@your-project-id.iam.gserviceaccount.com",
          "client_id": "your-client-id",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "token_uri": "https://oauth2.googleapis.com/token",
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
          "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project-id.iam.gserviceaccount.com"
        }' > gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json" >> $GITHUB_ENV
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud auth list

    - name: Create Directories
      run: |
        mkdir -p ML_OPS_Sentiment_Analyser/Data
        mkdir -p ML_OPS_Sentiment_Analyser/models
        mkdir -p ML_OPS_Sentiment_Analyser/artifacts
        mkdir -p ML_OPS_Sentiment_Analyser/mlruns

    - name: Download Data from GCP
      run: python ML_OPS_Sentiment_Analyser/Data_fetch.py

    - name: Train the Model
      run: python ML_OPS_Sentiment_Analyser/Model_training.py

    - name: Hyperparameter Tuning
      run: python ML_OPS_Sentiment_Analyser/hyperparameter_tuning.py

    - name: Validate the Model
      run: python ML_OPS_Sentiment_Analyser/model_validation.py

    - name: Detect Model Bias
      run: python ML_OPS_Sentiment_Analyser/bias_detection.py

    - name: Run Sensitivity Analysis
      run: python ML_OPS_Sentiment_Analyser/sensitivity_analysis.py

    - name: Version the Model
      run: python ML_OPS_Sentiment_Analyser/model_versioning.py

    - name: Track Experiment with MLflow (GCP Artifact Storage)
      run: python ML_OPS_Sentiment_Analyser/experiment_tracking.py

    - name: Upload Trained Model to GCP
      run: python ML_OPS_Sentiment_Analyser/Model_to_cloud.py

    - name: Upload Trained Model Files
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: ML_OPS_Sentiment_Analyser/models/

    - name: Upload MLflow Logs (Local Run Metadata)
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-logs
        path: ML_OPS_Sentiment_Analyser/mlruns/
