steps:
  # üîÅ Step 1: Restart the GKE Deployment
  - name: gcr.io/cloud-builders/kubectl
    id: Restart Deployment
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=sentiment-cluster
    args:
      - rollout
      - restart
      - deployment
      - sentiment-analyzer

  # ‚è≥ Step 2: Wait for Rollout to Complete
  - name: gcr.io/cloud-builders/kubectl
    id: Wait for Deployment Rollout
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=sentiment-cluster
    args:
      - rollout
      - status
      - deployment
      - sentiment-analyzer

  # üí£ Step 3: Delete Existing Drift Detection Job (if any)
  - name: gcr.io/cloud-builders/kubectl
    id: Delete Old Drift Job
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=sentiment-cluster
    args:
      - delete
      - job
      - data-drift-check
      - --ignore-not-found

  # üöÄ Step 4: Trigger Fresh Data Drift Detection Job
  - name: gcr.io/cloud-builders/kubectl
    id: Trigger Drift Detection
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=sentiment-cluster
    args:
      - apply
      - '-f'
      - Model_Deployment_Pipeline/data_drift_detector/data-drift-job.yaml

  # üïê Step 5: Wait for Drift Job Completion (Optional but Recommended)
  - name: gcr.io/cloud-builders/kubectl
    id: Wait for Drift Job Completion
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=sentiment-cluster
    args:
      - wait
      - --for=condition=complete
      - --timeout=180s
      - job/data-drift-check

options:
  logging: CLOUD_LOGGING_ONLY
